package de.regatta_hd.aquarius.db;

import java.util.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(name="Event")
@IdClass(de.regatta_hd.aquarius.db.EventId.class)
public class Event {
	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="Event_Club_ID_FK")
	private Club club;

	@OneToMany(targetEntity=de.regatta_hd.aquarius.db.Comp.class, mappedBy="event", cascade=CascadeType.MERGE)
	private Set<Comp> comps = new HashSet<Comp>();

	@OneToMany(targetEntity=de.regatta_hd.aquarius.db.Entry.class, mappedBy="event", cascade=CascadeType.MERGE)
	private Set<Entry> entrys = new HashSet<Entry>();

	@Basic
	@Column(name="Event_BoardMemberA", length=32)
	private String eventBoardMemberA;

	@Basic
	@Column(name="Event_BoardMemberB", length=32)
	private String eventBoardMemberB;

	@Basic
	@Column(name="Event_DefaultDistance")
	private int eventDefaultDistance;

	@Basic
	@Column(name="Event_EndDate", columnDefinition="datetime", nullable=false)
	private Date eventEndDate;

	@Basic
	@Column(name="Event_FootLogo", length=64)
	private String eventFootLogo;

	@Basic
	@Column(name="Event_HeadLogo_A", length=64)
	private String eventHeadLogoA;

	@Basic
	@Column(name="Event_HeadLogo_B", length=64)
	private String eventHeadLogoB;

	@Id
	@Column(name="Event_ID", columnDefinition="int identity")
	private int eventID;

	@OneToMany(targetEntity=de.regatta_hd.aquarius.db.EventReferee.class, mappedBy="event", cascade=CascadeType.MERGE)
	private Set<EventReferee> eventReferees = new HashSet<EventReferee>();

	@Basic
	@Column(name="Event_StartDate", columnDefinition="datetime", nullable=false)
	private Date eventStartDate;

	@Basic
	@Column(name="Event_SubTitle", length=32)
	private String eventSubTitle;

	@Basic
	@Column(name="Event_Title", nullable=false, length=64)
	private String eventTitle;

	@Basic
	@Column(name="Event_TrackDirection", length=3)
	private String eventTrackDirection;

	@Basic
	@Column(name="Event_Type", length=1)
	private String eventType;

	@Basic
	@Column(name="Event_Url", length=64)
	private String eventUrl;

	@Basic
	@Column(name="Event_Venue", length=32)
	private String eventVenue;

	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="Event_Venue_Nation_ID_FK")
	private Nation nation;

	@OneToMany(targetEntity=de.regatta_hd.aquarius.db.Offer.class, mappedBy="event", cascade=CascadeType.MERGE)
	private Set<Offer> offers = new HashSet<Offer>();

	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="Event_DefaultRaceMode_ID_FK")
	private RaceMode raceMode;

	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="Event_HeadReferee_ID_FK")
	private Referee referee;

	@OneToMany(targetEntity=de.regatta_hd.aquarius.db.ReportInfo.class, mappedBy="event", cascade=CascadeType.MERGE)
	private Set<ReportInfo> reportInfos = new HashSet<ReportInfo>();


	public Event() {
	}

	public Event(int eventID) {
		this.eventID = eventID;
	}

	public Club getClub() {
		return club;
	}

	public void setClub(Club club) {
		this.club = club;
	}

	public Set<Comp> getComps() {
		return comps;
	}

	public void setComps(Set<Comp> comps) {
		this.comps = comps;
	}

	public Set<Entry> getEntrys() {
		return entrys;
	}

	public void setEntrys(Set<Entry> entrys) {
		this.entrys = entrys;
	}

	public String getEventBoardMemberA() {
		return eventBoardMemberA;
	}

	public void setEventBoardMemberA(String eventBoardMemberA) {
		this.eventBoardMemberA = eventBoardMemberA;
	}

	public String getEventBoardMemberB() {
		return eventBoardMemberB;
	}

	public void setEventBoardMemberB(String eventBoardMemberB) {
		this.eventBoardMemberB = eventBoardMemberB;
	}

	public int getEventDefaultDistance() {
		return eventDefaultDistance;
	}

	public void setEventDefaultDistance(int eventDefaultDistance) {
		this.eventDefaultDistance = eventDefaultDistance;
	}

	public Date getEventEndDate() {
		return eventEndDate;
	}

	public void setEventEndDate(Date eventEndDate) {
		this.eventEndDate = eventEndDate;
	}

	public String getEventFootLogo() {
		return eventFootLogo;
	}

	public void setEventFootLogo(String eventFootLogo) {
		this.eventFootLogo = eventFootLogo;
	}

	public String getEventHeadLogoA() {
		return eventHeadLogoA;
	}

	public void setEventHeadLogoA(String eventHeadLogoA) {
		this.eventHeadLogoA = eventHeadLogoA;
	}

	public String getEventHeadLogoB() {
		return eventHeadLogoB;
	}

	public void setEventHeadLogoB(String eventHeadLogoB) {
		this.eventHeadLogoB = eventHeadLogoB;
	}

	public int getEventID() {
		return eventID;
	}

	public void setEventID(int eventID) {
		this.eventID = eventID;
	}

	public Set<EventReferee> getEventReferees() {
		return eventReferees;
	}

	public void setEventReferees(Set<EventReferee> eventReferees) {
		this.eventReferees = eventReferees;
	}

	public Date getEventStartDate() {
		return eventStartDate;
	}

	public void setEventStartDate(Date eventStartDate) {
		this.eventStartDate = eventStartDate;
	}

	public String getEventSubTitle() {
		return eventSubTitle;
	}

	public void setEventSubTitle(String eventSubTitle) {
		this.eventSubTitle = eventSubTitle;
	}

	public String getEventTitle() {
		return eventTitle;
	}

	public void setEventTitle(String eventTitle) {
		this.eventTitle = eventTitle;
	}

	public String getEventTrackDirection() {
		return eventTrackDirection;
	}

	public void setEventTrackDirection(String eventTrackDirection) {
		this.eventTrackDirection = eventTrackDirection;
	}

	public String getEventType() {
		return eventType;
	}

	public void setEventType(String eventType) {
		this.eventType = eventType;
	}

	public String getEventUrl() {
		return eventUrl;
	}

	public void setEventUrl(String eventUrl) {
		this.eventUrl = eventUrl;
	}

	public String getEventVenue() {
		return eventVenue;
	}

	public void setEventVenue(String eventVenue) {
		this.eventVenue = eventVenue;
	}

	public Nation getNation() {
		return nation;
	}

	public void setNation(Nation nation) {
		this.nation = nation;
	}

	public Set<Offer> getOffers() {
		return offers;
	}

	public void setOffers(Set<Offer> offers) {
		this.offers = offers;
	}

	public RaceMode getRaceMode() {
		return raceMode;
	}

	public void setRaceMode(RaceMode raceMode) {
		this.raceMode = raceMode;
	}

	public Referee getReferee() {
		return referee;
	}

	public void setReferee(Referee referee) {
		this.referee = referee;
	}

	public Set<ReportInfo> getReportInfos() {
		return reportInfos;
	}

	public void setReportInfos(Set<ReportInfo> reportInfos) {
		this.reportInfos = reportInfos;
	}
}