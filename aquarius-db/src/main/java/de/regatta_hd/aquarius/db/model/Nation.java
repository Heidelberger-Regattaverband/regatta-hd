package de.regatta_hd.aquarius.db.model;

import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Nation")
//lombok
@Getter
@Setter
@ToString(onlyExplicitlyIncluded = true)
public class Nation {
	@OneToMany(targetEntity = Athlet.class, mappedBy = "nation", cascade = CascadeType.MERGE)
	private Set<Athlet> athlets;

	@OneToMany(targetEntity = Club.class, mappedBy = "nation", cascade = CascadeType.MERGE)
	private Set<Club> clubs;

	@OneToMany(targetEntity = Event.class, mappedBy = "nation", cascade = CascadeType.MERGE)
	private Set<Event> events;

	@Id
	@Column(name = "Nation_ID", columnDefinition = "int identity")
	private int id;

	@Basic
	@Column(name = "Nation_IOC_Code", length = 5)
	private String iocCode;

	@Basic
	@Column(name = "Nation_Name", length = 64)
	@ToString.Include(rank = 10)
	private String name;

	@Basic
	@Column(name = "Nation_Name_German", length = 64)
	@ToString.Include(rank = 8)
	private String nameGerman;

	@OneToMany(targetEntity = Referee.class, mappedBy = "nation", cascade = CascadeType.MERGE)
	private Set<Referee> referees;
}