package de.regatta_hd.aquarius.db.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Auto-generated by: org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Entry")
@IdClass(de.regatta_hd.aquarius.db.model.EntryId.class)
public class Entry {
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Entry_OwnerClub_ID_FK", nullable = false)
	private Club club;

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.CompEntries.class, mappedBy = "entry", cascade = CascadeType.MERGE)
	private Set<CompEntries> compEntries = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Crew.class, mappedBy = "entry", cascade = CascadeType.MERGE)
	private Set<Crew> crews = new HashSet<>();

	@Basic
	@Column(name = "Entry_Bib")
	private Short entryBib;

	@Basic
	@Column(name = "Entry_BoatNumber")
	private Short entryBoatNumber;

	@Basic
	@Column(name = "Entry_CancelValue")
	private byte entryCancelValue;

	@Basic
	@Column(name = "Entry_Comment", length = 50)
	private String entryComment;

	@Basic
	@Column(name = "Entry_ExternID")
	private Integer entryExternID;

	@Basic
	@Column(name = "Entry_GroupValue")
	private Short entryGroupValue;

	@Id
	@Column(name = "Entry_ID", columnDefinition = "int identity")
	private int entryID;

	@Basic
	@Column(name = "Entry_IsLate")
	private boolean entryIsLate;

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.EntryLabel.class, mappedBy = "entry", cascade = CascadeType.MERGE)
	private Set<EntryLabel> entryLabels = new HashSet<>();

	@Basic
	@Column(name = "Entry_Note", length = 128)
	private String entryNote;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Entry_Event_ID_FK", nullable = false)
	private Event event;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Entry_ManualLabel_ID_FK")
	private Label label;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Entry_Race_ID_FK", nullable = false)
	private Offer offer;

	public Entry() {
	}

	public Entry(int entryID) {
		this.entryID = entryID;
	}

	public Club getClub() {
		return this.club;
	}

	public void setClub(Club club) {
		this.club = club;
	}

	public Set<CompEntries> getCompEntries() {
		return this.compEntries;
	}

	public void setCompEntries(Set<CompEntries> compEntries) {
		this.compEntries = compEntries;
	}

	public Set<Crew> getCrews() {
		return this.crews;
	}

	public void setCrews(Set<Crew> crews) {
		this.crews = crews;
	}

	public Short getEntryBib() {
		return this.entryBib;
	}

	public void setEntryBib(Short entryBib) {
		this.entryBib = entryBib;
	}

	public Short getEntryBoatNumber() {
		return this.entryBoatNumber;
	}

	public void setEntryBoatNumber(Short entryBoatNumber) {
		this.entryBoatNumber = entryBoatNumber;
	}

	public byte getEntryCancelValue() {
		return this.entryCancelValue;
	}

	public void setEntryCancelValue(byte entryCancelValue) {
		this.entryCancelValue = entryCancelValue;
	}

	public String getEntryComment() {
		return this.entryComment;
	}

	public void setEntryComment(String entryComment) {
		this.entryComment = entryComment;
	}

	public Integer getEntryExternID() {
		return this.entryExternID;
	}

	public void setEntryExternID(Integer entryExternID) {
		this.entryExternID = entryExternID;
	}

	public Short getEntryGroupValue() {
		return this.entryGroupValue;
	}

	public void setEntryGroupValue(Short entryGroupValue) {
		this.entryGroupValue = entryGroupValue;
	}

	public int getEntryID() {
		return this.entryID;
	}

	public void setEntryID(int entryID) {
		this.entryID = entryID;
	}

	public boolean isEntryIsLate() {
		return this.entryIsLate;
	}

	public void setEntryIsLate(boolean entryIsLate) {
		this.entryIsLate = entryIsLate;
	}

	public Set<EntryLabel> getEntryLabels() {
		return this.entryLabels;
	}

	public void setEntryLabels(Set<EntryLabel> entryLabels) {
		this.entryLabels = entryLabels;
	}

	public String getEntryNote() {
		return this.entryNote;
	}

	public void setEntryNote(String entryNote) {
		this.entryNote = entryNote;
	}

	public Event getEvent() {
		return this.event;
	}

	public void setEvent(Event event) {
		this.event = event;
	}

	public Label getLabel() {
		return this.label;
	}

	public void setLabel(Label label) {
		this.label = label;
	}

	public Offer getOffer() {
		return this.offer;
	}

	public void setOffer(Offer offer) {
		this.offer = offer;
	}
}