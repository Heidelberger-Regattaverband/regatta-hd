package de.regatta_hd.aquarius.db.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Auto-generated by: org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Referee")
@IdClass(de.regatta_hd.aquarius.db.model.RefereeId.class)
public class Referee {
	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.CompReferee.class, mappedBy = "referee", cascade = CascadeType.MERGE)
	private Set<CompReferee> compReferees = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Event.class, mappedBy = "referee", cascade = CascadeType.MERGE)
	private Set<Event> events = new HashSet<>();

	@ManyToMany(targetEntity = de.regatta_hd.aquarius.db.model.Event.class, mappedBy = "referees", cascade = CascadeType.MERGE)
	private Set<Event> events2 = new HashSet<>();

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Referee_Nation_ID_FK")
	private Nation nation;

	@Basic
	@Column(name = "Referee_City", length = 32)
	private String refereeCity;

	@Basic
	@Column(name = "Referee_ExternID")
	private Integer refereeExternID;

	@Basic
	@Column(name = "Referee_FirstName", nullable = false, length = 32)
	private String refereeFirstName;

	@Id
	@Column(name = "Referee_ID", columnDefinition = "int identity")
	private int refereeID;

	@Basic
	@Column(name = "Referee_LastName", nullable = false, length = 64)
	private String refereeLastName;

	@Basic
	@Column(name = "Referee_LicenceState")
	private byte refereeLicenceState;

	public Referee() {
	}

	public Referee(int refereeID) {
		this.refereeID = refereeID;
	}

	public Set<CompReferee> getCompReferees() {
		return this.compReferees;
	}

	public void setCompReferees(Set<CompReferee> compReferees) {
		this.compReferees = compReferees;
	}

	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	public Set<Event> getEvents2() {
		return this.events2;
	}

	public void setEvents2(Set<Event> events2) {
		this.events2 = events2;
	}

	public Nation getNation() {
		return this.nation;
	}

	public void setNation(Nation nation) {
		this.nation = nation;
	}

	public String getRefereeCity() {
		return this.refereeCity;
	}

	public void setRefereeCity(String refereeCity) {
		this.refereeCity = refereeCity;
	}

	public Integer getRefereeExternID() {
		return this.refereeExternID;
	}

	public void setRefereeExternID(Integer refereeExternID) {
		this.refereeExternID = refereeExternID;
	}

	public String getRefereeFirstName() {
		return this.refereeFirstName;
	}

	public void setRefereeFirstName(String refereeFirstName) {
		this.refereeFirstName = refereeFirstName;
	}

	public int getRefereeID() {
		return this.refereeID;
	}

	public void setRefereeID(int refereeID) {
		this.refereeID = refereeID;
	}

	public String getRefereeLastName() {
		return this.refereeLastName;
	}

	public void setRefereeLastName(String refereeLastName) {
		this.refereeLastName = refereeLastName;
	}

	public byte getRefereeLicenceState() {
		return this.refereeLicenceState;
	}

	public void setRefereeLicenceState(byte refereeLicenceState) {
		this.refereeLicenceState = refereeLicenceState;
	}
}