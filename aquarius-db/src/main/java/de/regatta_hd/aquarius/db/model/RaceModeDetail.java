package de.regatta_hd.aquarius.db.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Auto-generated by: org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "RaceMode_Detail")
@IdClass(de.regatta_hd.aquarius.db.model.RaceModeDetailId.class)
public class RaceModeDetail {
	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Comp.class, mappedBy = "raceModeDetail", cascade = CascadeType.MERGE)
	private Set<Comp> comps = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.ProgressionRule.class, mappedBy = "raceModeDetail", cascade = CascadeType.MERGE)
	private Set<ProgressionRule> progressionRules = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.ProgressionRule.class, mappedBy = "raceModeDetail2", cascade = CascadeType.MERGE)
	private Set<ProgressionRule> progressionRules2 = new HashSet<>();

	@Basic
	@Column(name = "RMLap_Code", nullable = false, length = 8)
	private String rMLapCode;

	@Id
	@Column(name = "RMLap_ID", columnDefinition = "int identity")
	private int rMLapID;

	@Basic
	@Column(name = "RMLap_Label", nullable = false, length = 8)
	private String rMLapLabel;

	@Basic
	@Column(name = "RMLap_Number")
	private Short rMLapNumber;

	@Basic
	@Column(name = "RMLap_QRText", length = 64)
	private String rMLapQRText;

	@Basic
	@Column(name = "RMLap_Round")
	private int rMLapRound;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "RMLap_Range_ID_FK", nullable = false)
	private RaceModeRange raceModeRange;

	public RaceModeDetail() {
	}

	public RaceModeDetail(int rMLapID) {
		this.rMLapID = rMLapID;
	}

	public Set<Comp> getComps() {
		return this.comps;
	}

	public void setComps(Set<Comp> comps) {
		this.comps = comps;
	}

	public Set<ProgressionRule> getProgressionRules() {
		return this.progressionRules;
	}

	public void setProgressionRules(Set<ProgressionRule> progressionRules) {
		this.progressionRules = progressionRules;
	}

	public Set<ProgressionRule> getProgressionRules2() {
		return this.progressionRules2;
	}

	public void setProgressionRules2(Set<ProgressionRule> progressionRules2) {
		this.progressionRules2 = progressionRules2;
	}

	public String getrMLapCode() {
		return this.rMLapCode;
	}

	public void setrMLapCode(String rMLapCode) {
		this.rMLapCode = rMLapCode;
	}

	public int getrMLapID() {
		return this.rMLapID;
	}

	public void setrMLapID(int rMLapID) {
		this.rMLapID = rMLapID;
	}

	public String getrMLapLabel() {
		return this.rMLapLabel;
	}

	public void setrMLapLabel(String rMLapLabel) {
		this.rMLapLabel = rMLapLabel;
	}

	public Short getrMLapNumber() {
		return this.rMLapNumber;
	}

	public void setrMLapNumber(Short rMLapNumber) {
		this.rMLapNumber = rMLapNumber;
	}

	public String getrMLapQRText() {
		return this.rMLapQRText;
	}

	public void setrMLapQRText(String rMLapQRText) {
		this.rMLapQRText = rMLapQRText;
	}

	public int getrMLapRound() {
		return this.rMLapRound;
	}

	public void setrMLapRound(int rMLapRound) {
		this.rMLapRound = rMLapRound;
	}

	public RaceModeRange getRaceModeRange() {
		return this.raceModeRange;
	}

	public void setRaceModeRange(RaceModeRange raceModeRange) {
		this.raceModeRange = raceModeRange;
	}
}