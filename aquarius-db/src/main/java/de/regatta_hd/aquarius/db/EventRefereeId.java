package de.regatta_hd.aquarius.db;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: de.regatta_hd.aquarius.db.EventReferee
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class EventRefereeId implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("de.regatta_hd.aquarius.db.EventReferee"); }
		catch(Exception e) {}
	}

	public int eREventIDFK;
	public int eRRefereeIDFK;

	public EventRefereeId() {
	}

	public EventRefereeId(String str) {
		fromString(str);
	}

	public int getEREventIDFK() {
		return eREventIDFK;
	}

	public void setEREventIDFK(int eREventIDFK) {
		this.eREventIDFK = eREventIDFK;
	}

	public int getERRefereeIDFK() {
		return eRRefereeIDFK;
	}

	public void setERRefereeIDFK(int eRRefereeIDFK) {
		this.eRRefereeIDFK = eRRefereeIDFK;
	}

	public String toString() {
		return String.valueOf(eREventIDFK)
			+ "::" + String.valueOf(eRRefereeIDFK);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + eREventIDFK;
		rs = rs * 37 + eRRefereeIDFK;
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		EventRefereeId other = (EventRefereeId) obj;
		return (eREventIDFK == other.eREventIDFK)
			&& (eRRefereeIDFK == other.eRRefereeIDFK);
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		eREventIDFK = Integer.parseInt(str);
		str = toke.nextToken();
		eRRefereeIDFK = Integer.parseInt(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}