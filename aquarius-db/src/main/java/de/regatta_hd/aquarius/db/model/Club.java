package de.regatta_hd.aquarius.db.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Auto-generated by: org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Club")
@IdClass(de.regatta_hd.aquarius.db.model.ClubId.class)
public class Club {
	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Athlet.class, mappedBy = "club", cascade = CascadeType.MERGE)
	private Set<Athlet> athlets = new HashSet<>();

	@Basic
	@Column(name = "Club_Abbr", length = 50)
	private String clubAbbr;

	@Basic
	@Column(name = "Club_City", length = 64)
	private String clubCity;

	@Basic
	@Column(name = "Club_Discount")
	private Double clubDiscount;

	@Basic
	@Column(name = "Club_ExternID")
	private Integer clubExternID;

	@Id
	@Column(name = "Club_ID", columnDefinition = "int identity")
	private int clubID;

	@Basic
	@Column(name = "Club_Name", length = 128)
	private String clubName;

	@Basic
	@Column(name = "Club_UltraAbbr", length = 16)
	private String clubUltraAbbr;

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Crew.class, mappedBy = "club", cascade = CascadeType.MERGE)
	private Set<Crew> crews = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Entry.class, mappedBy = "club", cascade = CascadeType.MERGE)
	private Set<Entry> entrys = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Event.class, mappedBy = "club", cascade = CascadeType.MERGE)
	private Set<Event> events = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Label.class, mappedBy = "club", cascade = CascadeType.MERGE)
	private Set<Label> labels = new HashSet<>();

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Club_Nation_ID_FK")
	private Nation nation;

	public Club() {
	}

	public Club(int clubID) {
		this.clubID = clubID;
	}

	public Set<Athlet> getAthlets() {
		return this.athlets;
	}

	public void setAthlets(Set<Athlet> athlets) {
		this.athlets = athlets;
	}

	public String getClubAbbr() {
		return this.clubAbbr;
	}

	public void setClubAbbr(String clubAbbr) {
		this.clubAbbr = clubAbbr;
	}

	public String getClubCity() {
		return this.clubCity;
	}

	public void setClubCity(String clubCity) {
		this.clubCity = clubCity;
	}

	public Double getClubDiscount() {
		return this.clubDiscount;
	}

	public void setClubDiscount(Double clubDiscount) {
		this.clubDiscount = clubDiscount;
	}

	public Integer getClubExternID() {
		return this.clubExternID;
	}

	public void setClubExternID(Integer clubExternID) {
		this.clubExternID = clubExternID;
	}

	public int getClubID() {
		return this.clubID;
	}

	public void setClubID(int clubID) {
		this.clubID = clubID;
	}

	public String getClubName() {
		return this.clubName;
	}

	public void setClubName(String clubName) {
		this.clubName = clubName;
	}

	public String getClubUltraAbbr() {
		return this.clubUltraAbbr;
	}

	public void setClubUltraAbbr(String clubUltraAbbr) {
		this.clubUltraAbbr = clubUltraAbbr;
	}

	public Set<Crew> getCrews() {
		return this.crews;
	}

	public void setCrews(Set<Crew> crews) {
		this.crews = crews;
	}

	public Set<Entry> getEntrys() {
		return this.entrys;
	}

	public void setEntrys(Set<Entry> entrys) {
		this.entrys = entrys;
	}

	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	public Set<Label> getLabels() {
		return this.labels;
	}

	public void setLabels(Set<Label> labels) {
		this.labels = labels;
	}

	public Nation getNation() {
		return this.nation;
	}

	public void setNation(Nation nation) {
		this.nation = nation;
	}
}