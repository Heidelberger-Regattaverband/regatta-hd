package de.regatta_hd.aquarius.db.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Auto-generated by: org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Event")
@IdClass(de.regatta_hd.aquarius.db.model.EventId.class)
public class Event {
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Event_Club_ID_FK")
	private Club club;

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Comp.class, mappedBy = "event", cascade = CascadeType.MERGE)
	private Set<Comp> comps = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Entry.class, mappedBy = "event", cascade = CascadeType.MERGE)
	private Set<Entry> entrys = new HashSet<>();

	@Basic
	@Column(name = "Event_BoardMemberA", length = 32)
	private String eventBoardMemberA;

	@Basic
	@Column(name = "Event_BoardMemberB", length = 32)
	private String eventBoardMemberB;

	@Basic
	@Column(name = "Event_DefaultDistance")
	private Integer eventDefaultDistance;

	@Basic
	@Column(name = "Event_EndDate", columnDefinition = "datetime", nullable = false)
	private Date eventEndDate;

	@Basic
	@Column(name = "Event_FootLogo", length = 64)
	private String eventFootLogo;

	@Basic
	@Column(name = "Event_HeadLogo_A", length = 64)
	private String eventHeadLogoA;

	@Basic
	@Column(name = "Event_HeadLogo_B", length = 64)
	private String eventHeadLogoB;

	@Id
	@Column(name = "Event_ID", columnDefinition = "int identity")
	private int eventID;

	@Basic
	@Column(name = "Event_StartDate", columnDefinition = "datetime", nullable = false)
	private Date eventStartDate;

	@Basic
	@Column(name = "Event_SubTitle", length = 32)
	private String eventSubTitle;

	@Basic
	@Column(name = "Event_Title", nullable = false, length = 64)
	private String eventTitle;

	@Basic
	@Column(name = "Event_TrackDirection", length = 3)
	private String eventTrackDirection;

	@Basic
	@Column(name = "Event_Type", length = 1)
	private String eventType;

	@Basic
	@Column(name = "Event_Url", length = 64)
	private String eventUrl;

	@Basic
	@Column(name = "Event_Venue", length = 32)
	private String eventVenue;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Event_Venue_Nation_ID_FK")
	private Nation nation;

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.Offer.class, mappedBy = "event", cascade = CascadeType.MERGE)
	private Set<Offer> offers = new HashSet<>();

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Event_DefaultRaceMode_ID_FK")
	private RaceMode raceMode;

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Event_HeadReferee_ID_FK")
	private Referee referee;

	@ManyToMany(targetEntity = de.regatta_hd.aquarius.db.model.Referee.class, cascade = CascadeType.MERGE)
	@JoinTable(schema = "dbo", name = "EventReferee", joinColumns = @JoinColumn(name = "ER_Event_ID_FK"), inverseJoinColumns = @JoinColumn(name = "ER_Referee_ID_FK"))
	private Set<Referee> referees = new HashSet<>();

	@OneToMany(targetEntity = de.regatta_hd.aquarius.db.model.ReportInfo.class, mappedBy = "event", cascade = CascadeType.MERGE)
	private Set<ReportInfo> reportInfos = new HashSet<>();

	public Event() {
	}

	public Event(int eventID) {
		this.eventID = eventID;
	}

	public Club getClub() {
		return this.club;
	}

	public void setClub(Club club) {
		this.club = club;
	}

	public Set<Comp> getComps() {
		return this.comps;
	}

	public void setComps(Set<Comp> comps) {
		this.comps = comps;
	}

	public Set<Entry> getEntrys() {
		return this.entrys;
	}

	public void setEntrys(Set<Entry> entrys) {
		this.entrys = entrys;
	}

	public String getEventBoardMemberA() {
		return this.eventBoardMemberA;
	}

	public void setEventBoardMemberA(String eventBoardMemberA) {
		this.eventBoardMemberA = eventBoardMemberA;
	}

	public String getEventBoardMemberB() {
		return this.eventBoardMemberB;
	}

	public void setEventBoardMemberB(String eventBoardMemberB) {
		this.eventBoardMemberB = eventBoardMemberB;
	}

	public Integer getEventDefaultDistance() {
		return this.eventDefaultDistance;
	}

	public void setEventDefaultDistance(Integer eventDefaultDistance) {
		this.eventDefaultDistance = eventDefaultDistance;
	}

	public Date getEventEndDate() {
		return this.eventEndDate;
	}

	public void setEventEndDate(Date eventEndDate) {
		this.eventEndDate = eventEndDate;
	}

	public String getEventFootLogo() {
		return this.eventFootLogo;
	}

	public void setEventFootLogo(String eventFootLogo) {
		this.eventFootLogo = eventFootLogo;
	}

	public String getEventHeadLogoA() {
		return this.eventHeadLogoA;
	}

	public void setEventHeadLogoA(String eventHeadLogoA) {
		this.eventHeadLogoA = eventHeadLogoA;
	}

	public String getEventHeadLogoB() {
		return this.eventHeadLogoB;
	}

	public void setEventHeadLogoB(String eventHeadLogoB) {
		this.eventHeadLogoB = eventHeadLogoB;
	}

	public int getEventID() {
		return this.eventID;
	}

	public void setEventID(int eventID) {
		this.eventID = eventID;
	}

	public Date getEventStartDate() {
		return this.eventStartDate;
	}

	public void setEventStartDate(Date eventStartDate) {
		this.eventStartDate = eventStartDate;
	}

	public String getEventSubTitle() {
		return this.eventSubTitle;
	}

	public void setEventSubTitle(String eventSubTitle) {
		this.eventSubTitle = eventSubTitle;
	}

	public String getEventTitle() {
		return this.eventTitle;
	}

	public void setEventTitle(String eventTitle) {
		this.eventTitle = eventTitle;
	}

	public String getEventTrackDirection() {
		return this.eventTrackDirection;
	}

	public void setEventTrackDirection(String eventTrackDirection) {
		this.eventTrackDirection = eventTrackDirection;
	}

	public String getEventType() {
		return this.eventType;
	}

	public void setEventType(String eventType) {
		this.eventType = eventType;
	}

	public String getEventUrl() {
		return this.eventUrl;
	}

	public void setEventUrl(String eventUrl) {
		this.eventUrl = eventUrl;
	}

	public String getEventVenue() {
		return this.eventVenue;
	}

	public void setEventVenue(String eventVenue) {
		this.eventVenue = eventVenue;
	}

	public Nation getNation() {
		return this.nation;
	}

	public void setNation(Nation nation) {
		this.nation = nation;
	}

	public Set<Offer> getOffers() {
		return this.offers;
	}

	public void setOffers(Set<Offer> offers) {
		this.offers = offers;
	}

	public RaceMode getRaceMode() {
		return this.raceMode;
	}

	public void setRaceMode(RaceMode raceMode) {
		this.raceMode = raceMode;
	}

	public Referee getReferee() {
		return this.referee;
	}

	public void setReferee(Referee referee) {
		this.referee = referee;
	}

	public Set<Referee> getReferees() {
		return this.referees;
	}

	public void setReferees(Set<Referee> referees) {
		this.referees = referees;
	}

	public Set<ReportInfo> getReportInfos() {
		return this.reportInfos;
	}

	public void setReportInfos(Set<ReportInfo> reportInfos) {
		this.reportInfos = reportInfos;
	}
}