# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up WireGuard
      uses: egor-tensin/setup-wireguard@v1
      with:
        endpoint: '${{ secrets.WG_ENDPOINT }}'
        endpoint_public_key: '${{ secrets.WG_ENDPOINT_PUBLIC_KEY }}'
        ips: '10.0.0.2/32'
        allowed_ips: '0.0.0.0/0, ::/0'
        private_key: '${{ secrets.WG_PRIVATE_KEY }}'
#        preshared_key: '${{ secrets.WG_PRESHARED_KEY }}'

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Cache Maven Repository
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      env:
        dbHost: ${{ secrets.DB_HOST }}
        dbName: ${{ secrets.DB_NAME }}
        username: ${{ secrets.DB_USER_NAME }}
        password: ${{ secrets.DB_PASSWORD }}
      run: mvn clean verify -B
