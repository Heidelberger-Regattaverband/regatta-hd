package de.regatta_hd.aquarius.db.model;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "dbo", name = "Label")
//lombok
@Getter
@Setter
@ToString(onlyExplicitlyIncluded = true)
public class Label {
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@JoinColumn(name = "Label_Club_ID_FK")
	private Club club;

	@OneToMany(targetEntity = RegistrationLabel.class, mappedBy = "label", cascade = CascadeType.MERGE)
	private Set<RegistrationLabel> labels;

	@OneToMany(targetEntity = Registration.class, mappedBy = "label", cascade = CascadeType.MERGE)
	private Set<Registration> registrations;

	@Id
	@Column(name = "Label_ID", columnDefinition = "int identity")
	private int id;

	@Basic
	@Column(name = "Label_IsTeam")
	@ToString.Include(rank = 8)
	private Boolean isTeam;

	@Basic
	@Column(name = "Label_Long", nullable = false, length = 512)
	@ToString.Include(rank = 9)
	private String labelLong;

	@Basic
	@Column(name = "Label_Short", nullable = false, length = 256)
	@ToString.Include(rank = 10)
	private String labelShort;
}